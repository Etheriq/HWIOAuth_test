# you can read more about security in the related section of the documentation
# http://symfony.com/doc/current/book/security.html
security:
    # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 10
        AppBundle\Entity\User:
            algorithm: bcrypt
            cost: 10

    # http://symfony.com/doc/current/book/security.html#hierarchical-roles
    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    admin:
                        password: '$2y$10$8UWDsT8bQJLuGX1WmKiXte8LiRXiS.rN.FzLuutc9mpRpFclYqRBq'
                        roles: 'ROLE_USER'
        oath_provider:
            id: oauth_test_provider
        main:
            entity: { class: AppBundle:User, property: email }

    # the main part of the security, where you can set up firewalls
    # for specific sections of your app
    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false
        signin:
            pattern: ^/signin
            security: false
        signup:
            pattern: ^/signup
            security: false
        main:
            pattern:    ^/
            form_login:
                provider: in_memory
                login_path: /signin
                check_path: /login_check
                default_target_path: secured_zone
                username_parameter: login[username]
                password_parameter: login[password]
            logout: true
            anonymous: ~
            switch_user: true

            oauth:
                resource_owners:
                    facebook: "/login/check-facebook"
                    google: "/login/check-google"
                login_path: /
                use_forward: false
                failure_path: /
                oauth_user_provider:
                    service: oauth_test_provider

    # with these settings you can restrict or allow access for different parts
    # of your application based on roles, ip, host or methods
    # http://symfony.com/doc/current/cookbook/security/access_control.html
    access_control:
        - { path: ^/login, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/secure, role: ROLE_USER }